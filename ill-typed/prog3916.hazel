let pi = 4. *. atan(1.) in type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average((expr, expr))
  + Times((expr, expr))
  + Thresh((expr, expr, expr, expr))
 in
let eval = fun (e, x, y) -> case e 
  | Thresh(a, b, c, d) =>
      if eval((a, x, y)) < eval((b, x, y)) then eval((c, x, y)) else eval((d, x, y))
  | Times(a, b) => eval((a, x, y)) *. eval((b, x, y))
  | Average(a, b) => eval((a, x, y)) *. eval((b, x, y))
  | Cosine(a) => cos(pi ** eval((a, x, y)))
  | Sine(a) => sin(pi ** eval((a, x, y)))
  | VarY => y
  | VarX => x
end in
let _ = eval((Time((VarX, VarY)), 1., 2.)) in ?
