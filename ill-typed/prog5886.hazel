type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
  + TimesTimes(expr, expr, expr)
  + SqXPlusY(expr, expr)
 in type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
  + TimesTimes(expr, expr, expr)
  + SqXPlusYDiv2(expr, expr)
 in let exprToString = fun e -> case e 
  | VarX => "x"
  | VarY => "y"
  | Sine(e1) => ^("sin (pi*")(^(exprToString(e1))(")"))
  | Cosine(e1) => ^("cos (pi*")(^(exprToString(e1))(")"))
  | Average(e1, e2) =>
      ^("((")(^(exprToString(e1))(^(" + ")(^(exprToString(e2))(")/2)"))))
  | Times(e1, e2) => ^(exprToString(e1))(^(" * ")(exprToString(e2)))
  | Thresh(e1, e2, e3, e4) =>
      ^("(")(^(exprToString(e1))(^("<")(^(exprToString(e2))(^(" ? ")(^(exprToString(e3))(^(" : ")(^(exprToString(e4))(")"))))))))
  | TimesTimes(e1, e2, e3) =>
      ^(exprToString(e1))(^(" * ")(^(exprToString(e2))(^(" * ")(exprToString(e3)))))
  | SqXPlusY(e1, e2) =>
      ^("(")(^(exprToString(e1))(^(" * ")(^(exprToString(e1))(^(") + (")(^(exprToString(e2))("/2"))))))
end in ?
