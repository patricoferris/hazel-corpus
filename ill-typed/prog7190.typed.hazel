let removeDuplicates : forall a -> forall b -> [a] -> [b] = typfun a -> typfun b -> fun l -> 
  let helper = fun (seen, rest) -> case rest 
  | [] => seen
  | h :: t => let rest' = rev(t) in let seen' = seen in ?
end in rev@<a>@<b>(helper@<[a]>(([], l))) in
?
