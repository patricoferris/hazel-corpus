let digitsOfInt : Int -> [Int] = fun n -> if n <= 0 then [] else int_mod((n, 10)) :: digitsOfInt(n / 10) in let sumList : [Int] -> Int = fun xs -> case xs 
  | [] => 0
  | x :: xs' => x + sumList(xs')
end in let sum : [Int] -> [Int] = fun n :: [i] -> if ||(n < 10)([]) then sumList(digitsOfInt(n)) :: [i] else sumList(digitsOfInt(n)) :: [1 + 1] in ?
