type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
  + Half(expr)
  + Timestwo(expr)
 in let exprToString = fun e -> case e 
  | VarX => "x"
  | VarY => "y"
  | Sine(x) => ^("sin(pi*")(^(exprToString(x))(")"))
  | Cosine(x) => ^("cos(pi*")(^(exprToString(x))(")"))
  | Average(x, y) =>
      ^("((")(^(exprToString(x))(^("+")(^(exprToString(y))(")/2)"))))
  | Times(x, y) => ^(exprToString(x))(^("*")(exprToString(y)))
  | Thresh(w, x, y, z) =>
      ^("(")(^(exprToString(w))(^("<")(^(exprToString(x))(^("?")(^(exprToString(y))(^(":")(^(exprToString(z))(")"))))))))
  | Half(x) => ^(".5*")(exprToString(x))
  | Third(x) => ^("0.33*")(exprToString(x))
end in ?
