type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average((expr, expr))
  + Times((expr, expr))
  + Thresh((expr, expr, expr, expr))
 in
let exprToString = fun e -> let exp = exprToString in case e 
  | VarX => "x"
  | VarY => "y"
  | Sine(a) => "sin(pi*" ++ exp(a) ++ ")"
  | Cosine(a) => "cos(pi*" ++ exp(a) ++ ")"
  | Average(a, b) => "((" ++ exp(a) ++ "+" ++ exp(b) ++ ")/2)"
  | Times(a, b) => exp(a) ++ "*" ++ exp(b)
  | Thresh(a, b, c, d) =>
      "(" ++ exp(a) ++ "<" ++ exp(b) ++ "?" ++ exp(c) ++ ":" ++ exp(d) ++ ")"
  | Tan(a) => "sin(pi*" ++ exp(a) ++ ")/(cos(pi*" ++ exp(a) ++ ")"
end in
?
