type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Square(expr)
  + Average((expr, expr))
  + Times((expr, expr))
  + MyExpr((expr, expr, expr, expr))
  + Thresh((expr, expr, expr, expr))
 in
let buildMyExpr : forall d -> (a, b, c) -> d = typfun d -> fun (a, b, a_less) -> MyExpr((a, b, a_less)) in
?
