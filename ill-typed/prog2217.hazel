type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average((expr, expr))
  + Times((expr, expr))
  + Thresh((expr, expr, expr, expr))
 in
let buildAverage = fun (e1, e2) -> Average((e1, e2)) in let buildCosine = fun e -> Cosine(e) in
                                                      let buildSine = fun e -> Sine(e) in
                                                      let buildThresh = fun (a, b, a_less, b_less) -> Thresh((a, b, a_less, b_less)) in
                                                      let buildTimes = fun (e1, e2) -> Times((e1, e2)) in
                                                      let buildY = fun () -> VarY in
                                                      let build = fun (rand, depth) -> 
                                                        let case = rand((0, 6)) in
                                                        ? in
                                                      ?
