type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average((expr, expr))
  + Times((expr, expr))
  + Thresh((expr, expr, expr, expr))
 in
let exprToString = fun e -> case e 
  | VarX => "x"
  | VarY => "y"
  | Sine(e) => "sin (pi*%s)"(e)
  | Cosine(e) => "cos (pi*%s)"(e)
  | Average(e, ex) => "(("(exprToString)(e)("+")(exprToString)(ex)(")/2)")
  | Times(e, ex) => exprToString(e)("*")(exprToString)(ex)
  | Thresh(e) => "Thresh"
end in
?
