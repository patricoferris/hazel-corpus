type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
 in let eval : ? -> Float = fun (e, x, y) -> case e 
  | VarX => x
  | VarY => y
  | Sine(n) => sin(*.(3.14)(eval((n, x, y))))
  | Consine(n) => cos(*.(3.14)(eval((n, x, y))))
  | Average(m, n) => /.(+.(eval((m, x, y)))(eval((n, x, y))))(2)
  | Times(m, n) => *.(eval((m, x, y)))(eval((n, x, y)))
end in ?
