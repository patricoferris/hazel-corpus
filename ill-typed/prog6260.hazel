type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
  + Golden(expr)
  + MeanPi(expr, expr, expr)
 in type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
 in let exprToString = fun e -> case e 
  | VarX => "x"
  | VarY => "y"
  | Sine(expr) => ^("sin(pi*")(^(exprToString(expr))(")"))
  | Cosine(expr) => ^("cos(pi*")(^(exprToString(expr))(")"))
  | Average(expr1, expr2) =>
      ^("(")(^(exprToString(expr1))(^("+")(^(exprToString(expr2))(")/2"))))
  | Times(expr1, expr2) =>
      ^(exprToString(expr1))(^("*")(exprToString(expr2)))
  | Thresh(expr1, expr2, expr3, expr4) =>
      ^("(")(^(exprToString(expr1))(^("<")(^(exprToString(expr2))(^("?")(^(exprToString(expr3))(^(":")(^(exprToString(expr4))(")"))))))))
  | Golden => ""
  | MeanPi => ""
end in ?
