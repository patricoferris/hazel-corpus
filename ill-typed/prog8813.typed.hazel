let removeDuplicates : forall a -> forall b -> [a] -> [b] = typfun a -> typfun b -> fun l -> let helper = fun (seen, rest) -> case rest 
  | [] => seen
  | h :: t =>
      let seen' = if mem(h)(t) then true else false in let rest' = failwith("to be written") in helper((seen', rest'))
end in rev(helper(([], l))) in ?
