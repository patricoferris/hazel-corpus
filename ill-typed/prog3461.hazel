let c1 = fun () -> failwith("to be implemented") in let pi = *.(4.)(atan(1.)) in type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
 in let eval = fun (e, x, y) -> case e 
  | VarX => +.(x)(0.)
  | VarY => +.(y)(0.)
  | Sine(s1) => sin(*.(pi)(eval((s1, x, y))))
  | Cosine(c1) => cos(*.(pi)(eval((c1, x, y))))
  | Average(a1, a2) => /.(+.(eval((a1, x, y)))(eval((a2, x, y))))(2.)
  | Times(t1, t2) => *.(eval((t1, x, y)))(eval((t2, x, y)))
  | Thresh(h1, h2, h3, h4) =>
      if eval((h1, x, y)) < eval((h2, x, y)) then eval((h3, x, y)) else eval((h4, x, y))
end in let _ = eval((Sine(Average((Varx, VarY))), 0.5, -0.5)) in ?
