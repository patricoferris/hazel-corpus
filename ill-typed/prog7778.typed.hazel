type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
 in let exprToString : expr -> String = fun e -> case e 
  | VarX => "x"
  | VarY => "y"
  | Sine(e) => "sin(pi*"(exprToString)(e)(")")
  | Cosine(e) => "cos(pi*"(exprToString)(e)(")")
  | Average(e) =>
      ^("(("(exprToString)(e))(^("+")(exprToString(e)(")") / 2(")")))
  | Times(e) => exprToString(e)("*")(exprToString)(e)
end in ?
