type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average((expr, expr))
  + Times((expr, expr))
  + Thresh((expr, expr, expr, expr))
 in
let buildAverage = fun (e1, e2) -> Average((e1, e2)) in let eval = fun (e, x, y) -> case e 
  | VarX => let vx = x in vx
  | VarY => let vy = y in vy
  | Average => buildAverage((vx, vy))
end in
?
