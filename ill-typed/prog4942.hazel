type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
  + Square(expr)
  + Volume(expr, expr, expr)
 in type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
  + Sqaure(expr)
  + Volume(expr, expr, expr)
 in let exprToString = fun e -> case e 
  | VarX => "x"
  | VarY => "y"
  | Sine(t) => ^("sin(pi*")(^(exprToString(t))(")"))
  | Cosine(t) => ^("cos(pi*")(^(exprToString(t))(")"))
  | Average(s, t) =>
      ^("((")(^(exprToString(s))(^("+")(^(exprToString(t))(")/2)"))))
  | Times(s, t) => ^(exprToString(s))(^("*")(exprToString(t)))
  | Thresh(s, t, u, v) =>
      ^("(")(^(exprToString(s))(^("<")(^(exprToString(t))(^("?")(^(exprToString(u))(^(":")(^(exprToString(v))(")"))))))))
  | Square(s) => ^("(")(^(exprToString(s))(")^2"))
  | Volume(s, t, u) =>
      ^("Vol(H: ")(^(exprToString(s))(^(", W: ")(^(exprToString(t))(^(", L: ")(^(exprToString(u))(")"))))))
end in ?
