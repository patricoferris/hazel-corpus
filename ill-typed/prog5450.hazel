let lastListElement = fun n -> case n 
  | [] => failwith("ERROR: List must be of size 1 or greater")
  | [x] => x
  | x :: y => lastListElement(y)
end in
let catLists = fun x -> fun y -> if not(x) == [] then case x 
  | [x] => x :: y
  | h :: t => catLists(t)(lastListElement(x) :: y)
end else if x == [] then y else ? in
?
