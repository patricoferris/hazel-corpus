type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Average(expr, expr)
  + Times(expr, expr)
  + Thresh(expr, expr, expr, expr)
 in let pi = *.(4.)(atan(1.)) in let eval = fun (e, x, y) -> case e 
  | VarX => x
  | VarY => y
  | Sine(u) => sin(*.(pi)(eval((u, x, y))))
  | Cosine(u) => cos(*.(pi)(eval((u, x, y))))
  | Average(u, v) => /.(+.(eval((u, x, y)))(eval((v, x, y))))(2.)
  | Times(u, v) => *.(eval((u, x, y)))(eval((v, x, y)))
  | Thresh(s, t, u, v) =>
      if eval((s, x, y)) < eval((t, x, y)) then eval((u, x, y)) else eval((v, x, y))
  | Halve(u) => /.(eval((u, x, y)))(2)
  | Wow(u, v, w) =>
      sqrt(*.(*.(abs(eval((u, x, y))))(abs(eval((v, x, y)))))(abs(eval((w, x, y)))))
end in ?
