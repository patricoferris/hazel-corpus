type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Root(expr)
  + Average((expr, expr))
  + Times((expr, expr))
  + Pivot((expr, expr, expr))
  + Thresh((expr, expr, expr, expr))
 in
type expr = 
  + VarX
  + VarY
  + Sine(expr)
  + Cosine(expr)
  + Flip(expr)
  + Average((expr, expr))
  + Times((expr, expr))
  + Pivot((expr, expr, expr))
  + Thresh((expr, expr, expr, expr))
 in
let exprToString = fun e -> case e 
  | VarX => "x"
  | VarY => "y"
  | Sine(x1) => "sin(pi*" ++ exprToString(x1) ++ ")"
  | Cosine(x2) => "cos(pi*" ++ exprToString(x2) ++ ")"
  | Root(x3) => "sqrt(" ++ exprToString(x3) ++ ")"
  | Average(x4, x5) =>
      "((" ++ exprToString(x4) ++ "+" ++ exprToString(x5) ++ ")/2)"
  | Times(x6, x7) => exprToString(x6) ++ "*" ++ exprToString(x7)
  | Thresh(x8, x9, x10, x11) =>
      "(" ++ exprToString(x8) ++ "<" ++ exprToString(x9) ++ "?" ++ exprToString(x10) ++ ":" ++ exprToString(x11) ++ ")"
  | Pivot(x12, x13, x14) =>
      "(" ++ exprToString(x12) ++ "<0?" ++ exprToString(x13) ++ ":" ++ exprToString(x14) ++ ")"
end in
?
